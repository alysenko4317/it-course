version: '3.8'

services:

  web:
    build:
      context: .
      dockerfile: Dockerfile.debug
    container_name: php-apache-web

    ports:
      - "8200:80"  # Map localhost:8200 to container's port 80
      - "9003:9003"  # Expose Xdebug port for debugging

    volumes:
      - .:/var/www/html  # Sync the project files to the container

    env_file:
      - ../bot/.env
      
    environment:
      - APACHE_RUN_USER=www-data
      - APACHE_RUN_GROUP=www-data
      - XDEBUG_MODE=debug
      - XDEBUG_CONFIG="client_host=host.docker.internal client_port=9003"
      
    extra_hosts:
      - "host.docker.internal:host-gateway"
      
    networks:
      - app-network


  db:
    build: ../database/impl # Use your custom Dockerfile for PostgreSQL
    container_name: postgres-db
    restart: always
    
    ports:
      - "8432:5432"  # Map localhost:8432 to container's port 5432

    volumes:
      - db_data:/var/lib/postgresql/data  # Persist the database data

    networks:
      - app-network


  telegram-bot:
    build: ../bot  # Path to your tg-bot's Dockerfile directory
    container_name: telegram-bot
    restart: always
    
    volumes:
      - ../bot:/app  # Corrected path to mount bot directory for development

    env_file:
      - ../bot/.env  # Use the .env file for the bot's environment variables (like TOKEN)

    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  db_data:
